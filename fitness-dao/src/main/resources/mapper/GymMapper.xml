<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zju.se.nohair.fitness.dao.mapper.GymMapper">
  <resultMap id="BaseResultMap" type="com.zju.se.nohair.fitness.dao.po.GymPo">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="address" jdbcType="VARCHAR" property="address"/>
    <result column="content" jdbcType="VARCHAR" property="content"/>
    <result column="business_id" jdbcType="INTEGER" property="businessId"/>
    <result column="pic_group_id" jdbcType="INTEGER" property="picGroupId"/>
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, address, content, business_id, pic_group_id, created_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from gym
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getGymNameListHasPublicCourse" resultType="String">
    select
    name
    from gym
    where id in
		(select gym_id from owns_gym where business_id in
			(select business_id from public_course where status = 1 or status = 2 or status = 4)
		)
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gym
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zju.se.nohair.fitness.dao.po.GymPo">
    insert into gym (id, name, address, 
      content, business_id, pic_group_id,
      created_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{businessId,jdbcType=INTEGER}, #{picGroupId,jdbcType=INTEGER},
      #{createdTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zju.se.nohair.fitness.dao.po.GymPo">
    insert into gym
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="picGroupId != null">
        pic_group_id,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="picGroupId != null">
        #{picGroupId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zju.se.nohair.fitness.dao.po.GymPo">
    update gym
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="picGroupId != null">
        pic_group_id = #{picGroupId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zju.se.nohair.fitness.dao.po.GymPo">
    update gym
    set name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      business_id = #{businessId,jdbcType=INTEGER},
      pic_group_id = #{picGroupId,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
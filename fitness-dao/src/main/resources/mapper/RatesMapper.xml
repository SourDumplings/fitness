<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zju.se.nohair.fitness.dao.mapper.RatesMapper">
  <resultMap id="BaseResultMap" type="com.zju.se.nohair.fitness.dao.po.RatesPo">
    <id column="from_id" jdbcType="INTEGER" property="fromId"/>
    <id column="to_id" jdbcType="INTEGER" property="toId"/>
    <id column="time" jdbcType="TIMESTAMP" property="time"/>
    <result column="rating_points" jdbcType="INTEGER" property="ratingPoints"/>
    <result column="content" jdbcType="VARCHAR" property="content"/>
    <result column="pic_group_id" jdbcType="INTEGER" property="picGroupId"/>
    <result column="type" jdbcType="INTEGER" property="type"/>
  </resultMap>
  <sql id="Base_Column_List">
    from_id, to_id, time, rating_points, content, pic_group_id, type
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.zju.se.nohair.fitness.dao.po.RatesPoKey"
    resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from rates
    where from_id = #{fromId,jdbcType=INTEGER}
    and to_id = #{toId,jdbcType=INTEGER}
    and time = #{time,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.zju.se.nohair.fitness.dao.po.RatesPoKey">
    delete from rates
    where from_id = #{fromId,jdbcType=INTEGER}
      and to_id = #{toId,jdbcType=INTEGER}
      and time = #{time,jdbcType=TIMESTAMP}
  </delete>
  <insert id="insert" parameterType="com.zju.se.nohair.fitness.dao.po.RatesPo">
    insert into rates (from_id, to_id, time, 
      rating_points, content, pic_group_id, 
      type)
    values (#{fromId,jdbcType=INTEGER}, #{toId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, 
      #{ratingPoints,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{picGroupId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zju.se.nohair.fitness.dao.po.RatesPo">
    insert into rates
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fromId != null">
        from_id,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="ratingPoints != null">
        rating_points,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="picGroupId != null">
        pic_group_id,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fromId != null">
        #{fromId,jdbcType=INTEGER},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="ratingPoints != null">
        #{ratingPoints,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="picGroupId != null">
        #{picGroupId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zju.se.nohair.fitness.dao.po.RatesPo">
    update rates
    <set>
      <if test="ratingPoints != null">
        rating_points = #{ratingPoints,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="picGroupId != null">
        pic_group_id = #{picGroupId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where from_id = #{fromId,jdbcType=INTEGER}
    and to_id = #{toId,jdbcType=INTEGER}
    and time = #{time,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zju.se.nohair.fitness.dao.po.RatesPo">
    update rates
    set rating_points = #{ratingPoints,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      pic_group_id = #{picGroupId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where from_id = #{fromId,jdbcType=INTEGER}
      and to_id = #{toId,jdbcType=INTEGER}
      and time = #{time,jdbcType=TIMESTAMP}
  </update>
</mapper>
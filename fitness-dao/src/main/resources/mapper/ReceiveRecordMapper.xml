<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zju.se.nohair.fitness.dao.mapper.ReceiveRecordMapper">
  <resultMap id="BaseResultMap" type="com.zju.se.nohair.fitness.dao.po.ReceiveRecordPo">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="from_id" jdbcType="INTEGER" property="fromId"/>
    <result column="to_id" jdbcType="INTEGER" property="toId"/>
    <result column="amount" jdbcType="DECIMAL" property="amount"/>
    <result column="type" jdbcType="INTEGER" property="type"/>
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, from_id, to_id, amount, type, created_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from receive_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllByBusinessId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from receive_record
    where from_id = #{businessId,jdbcType=INTEGER} and type = 3
    or to_id = #{businessId,jdbcType=INTEGER} and (type = 1 or type = 2 or type = 4)
  </select>
  <select id="selectAllCoachReceiveRecordsByCoachId" parameterType="java.lang.Integer"
    resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from receive_record
    where to_id = #{coachId,jdbcType=INTEGER} and (type = 0 or type = 3)
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from receive_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zju.se.nohair.fitness.dao.po.ReceiveRecordPo">
    insert into receive_record (id, from_id, to_id, 
      amount, type, created_time
      )
    values (#{id,jdbcType=INTEGER}, #{fromId,jdbcType=INTEGER}, #{toId,jdbcType=INTEGER}, 
      #{amount,jdbcType=DECIMAL}, #{type,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zju.se.nohair.fitness.dao.po.ReceiveRecordPo">
    insert into receive_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=INTEGER},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective"
    parameterType="com.zju.se.nohair.fitness.dao.po.ReceiveRecordPo">
    update receive_record
    <set>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=INTEGER},
      </if>
      <if test="toId != null">
        to_id = #{toId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zju.se.nohair.fitness.dao.po.ReceiveRecordPo">
    update receive_record
    set from_id = #{fromId,jdbcType=INTEGER},
      to_id = #{toId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      type = #{type,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>